CREATE TABLE IF NOT EXISTS users(
	user_id INT GENERATED BY DEFAULT AS IDENTITY,
    user_login varchar(256) NOT NULL UNIQUE,
	user_password varchar(256) NOT NULL,
	user_email varchar(256) NOT NULL,
	is_admin BOOLEAN DEFAULT false NOT NULL,
	PRIMARY KEY(user_id),
	CHECK(LENGTH(user_login)>=6),
	CHECK(LENGTH(user_password)>=6)
);

CREATE TABLE IF NOT EXISTS courses(
	course_id INT GENERATED BY DEFAULT AS IDENTITY,
    fk_user_id INT,
    course_title varchar(256) NOT NULL UNIQUE,
	course_subtitle varchar(256) NOT NULL,
    course_day_posted date DEFAULT CURRENT_DATE,
    course_content TEXT,
	PRIMARY KEY(course_id),
	CONSTRAINT fk_course
		FOREIGN KEY (fk_user_id)
			REFERENCES users(user_id)
);

INSERT INTO USERS VALUES (666,'Admin666',
							  'Admin666',
                              'alexanidandr@gmail.com', true);

create or replace function login_user(
    user_login_n users.user_login%type,
    user_password_n users.user_password%type
) returns INT
language plpgsql
as
$body$
declare
    found_id INT;
begin

    SELECT users.user_id
        INTO found_id
            FROM users
                WHERE (users.user_login LIKE user_login_n AND user_password LIKE user_password_n);
    
    IF found_id IS NULL then
    found_id := -1;
    END IF;

    return found_id;
    exception
        when others then
            return -1;
end;
$body$

create or replace function get_user_info(
    u_id int
) RETURNS users
language sql
as
$body$
    select * from users
    where users.user_id = u_id;
$body$

create or replace function create_course(
    fk_user_id_n courses.fk_user_id%TYPE,
    course_title_n courses.course_title%TYPE,
    course_subtitle_n courses.course_subtitle%TYPE,
    course_content_n courses.course_content%TYPE
) returns text
language plpgsql
as
$body$
declare 
    status int;
begin
    INSERT INTO courses(fk_user_id,course_title,course_subtitle,course_content)
    VALUES (fk_user_id_n,course_title_n,course_subtitle_n,course_content_n);

    status := currval(pg_get_serial_sequence('courses', 'course_id'));

    return status;
end;
$body$